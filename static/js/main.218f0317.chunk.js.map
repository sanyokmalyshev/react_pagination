{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","numberPages","className","href","onClick","map","number","items","App","useState","changeCurrentPage","addPerPage","length","showItems","values","showValues","slice","visibleItems","itemsFromTo","firstNumber","lastNumber","id","value","onChange","e","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCEIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQC,KAAKC,KAAKN,EAAQC,GAC1BM,EAAcd,EAAW,EAAGW,GAElC,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAS,oBAA+B,IAAhBN,GAAqB,YAD/C,SAGE,mBACE,UAAQ,WACRM,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBP,EACfQ,QAAS,WACa,IAAhBR,GACFC,EAAaD,EAAc,IAPjC,oBAeDK,EAAYI,KAAI,SAAAC,GAAM,OACrB,oBACEJ,UAAS,oBAAeN,IAAgBU,GAAU,UADpD,SAIE,mBACE,UAAQ,WACRJ,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,WACHE,IAAWV,GACbC,EAAaS,IANnB,SAUGA,KAZEA,MAiBT,oBACEJ,UAAS,oBAAeN,IAAgBE,GAAS,YADnD,SAGE,mBACE,UAAQ,WACRI,UAAU,YACVC,KAAK,QACL,gBAAeP,IAAgBE,EAC/BM,QAAS,WACHR,IAAgBE,GAClBD,EAAaD,EAAc,IAPjC,0BCzDJW,EAAQpB,EAAW,EAAG,IACzBkB,KAAI,SAAAd,GAAC,qBAAYA,MAEPiB,EAAgB,WAC3B,MAAyCC,mBAAS,GAAlD,mBAAOb,EAAP,KAAoBc,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBgB,EAAhB,KACMb,EAAQC,KAAKC,KAAKO,EAAMK,OAASjB,GAMjCkB,EAAY,SAACC,GACjB,IAAIC,EAAaD,EAAOE,MAAM,EAAGpB,EAAc,GAW/C,OATIA,EAAcE,IAChBiB,EACID,EAAOE,OAAOpB,EAAc,GAAKD,EAASA,EAAUC,IAGtDA,IAAgBE,IAClBiB,EAAaD,EAAOE,OAAOpB,EAAc,GAAKD,EAASmB,EAAOF,SAGzDG,GAGHE,EAAeJ,EAAUN,GACzBW,EAAcL,EAAU1B,EAAW,EAAGoB,EAAMK,SAC5CO,EAAcD,EAAY,GAC1BE,EAAaF,EAAYA,EAAYN,OAAS,GAEpD,OACE,sBAAKV,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCuB,EADjC,cACkDC,EADlD,eACmEb,EAAMK,OADzE,OAIA,sBAAKV,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO3B,EACP4B,SAAU,SAACC,GACTb,EAAWc,OAAOD,EAAEE,OAAOJ,QAC3BZ,EAAkB,IAPtB,UAUE,wBAAQY,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOa,EAAMK,OACbjB,QAASA,EACTC,YAAaA,EACbC,aA5De,SAACS,GACpBI,EAAkBJ,MA6DhB,6BACGW,EAAaZ,KAAI,SAAAuB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC1ElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.218f0317.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const numberPages = getNumbers(1, pages);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={`page-item ${currentPage === 1 && 'disabled'}`}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => {\n              if (currentPage !== 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {numberPages.map(number => (\n          <li\n            className={`page-item ${currentPage === number && 'active'}`}\n            key={number}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${number}`}\n              onClick={() => {\n                if (number !== currentPage) {\n                  onPageChange(number);\n                }\n              }}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={`page-item ${currentPage === pages && 'disabled'}`}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pages}\n            onClick={() => {\n              if (currentPage !== pages) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, changeCurrentPage] = useState(1);\n  const [perPage, addPerPage] = useState(5);\n  const pages = Math.ceil(items.length / perPage);\n\n  const onPageChange = (number: number) => {\n    changeCurrentPage(number);\n  };\n\n  const showItems = (values: string[] | number[]) => {\n    let showValues = values.slice(0, currentPage - 1);\n\n    if (currentPage < pages) {\n      showValues\n        = values.slice((currentPage - 1) * perPage, perPage * currentPage);\n    }\n\n    if (currentPage === pages) {\n      showValues = values.slice((currentPage - 1) * perPage, values.length);\n    }\n\n    return showValues;\n  };\n\n  const visibleItems = showItems(items);\n  const itemsFromTo = showItems(getNumbers(1, items.length));\n  const firstNumber = itemsFromTo[0];\n  const lastNumber = itemsFromTo[itemsFromTo.length - 1];\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstNumber} - ${lastNumber} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => {\n              addPerPage(Number(e.target.value));\n              changeCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}